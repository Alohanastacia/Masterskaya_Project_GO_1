services:
  postgres:
    container_name: postgres_container_report_service
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_DBNAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - postgres
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1G

  pgadmin:
    container_name: pgadmin_container_report_service
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "15:80"
    networks:
      - postgres
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1G

  app:
    build:
      context: . 
      dockerfile: Dockerfile  # Dockerfile для сборки контейнера в находится корневом каталоге
    ports:
      - "${APP_PORT}:${APP_PORT}"
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DBNAME: ${DB_DBNAME}
      APP_ENV: ${APP_ENV}
    depends_on:
      - postgres
    networks:
      - postgres

networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin:
